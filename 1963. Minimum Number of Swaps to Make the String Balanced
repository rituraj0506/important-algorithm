    int minSwaps(string s) {
        //The main stratergy is to keep track of the opening and closing brackets. Remove all the brackets which are in the correct position or balanced and then 
        return the (number of remaining pairs + 1)/2.   
                
        stack<char>st;
        
        for(auto child: s) {
            if(child=='[') st.push(child);
            else if(!st.empty()) st.pop();
        }
        
        return (st.size() + 1)/2;
        }
        
        t(c)=o(n)
        s(c)=o(n)
        
        
         int minSwaps(string s) {
        int n=s.size();
        int c=0;
        for(auto i:s)
        {
            if(i=='[')
                c++;
            else if(c>0)
                c--;
        }
        return (c+1)/2;
    }
    t(c)=o(n)
    s(c0=o(1)
  
    
